h	左
j	下
k	上
l	右





vi fileName	创建新文件/或打开文件
:w  保存
:q  退出
:q! 不保存修改 直接退出
:set nu	显示行号
Ctrl + g	// 查看当前文件信息
[number] + G/:[number]	// 跳转到number 行
%		// 快速找到另一个括号
/! [shell]	// 在vim中 执行shell命令
:r		// 合并文件
Esc	从命令模式切换m编辑模式
cp 源文件 目标文件	文件复制
rm 源文件		文件删除
mv 源文件 目标文件	文件移动
mkdir 文件名称		创建文件夹

%	// 快速找到另一个括号
>>	// 缩进
<<	// 退回缩进
vi 文件名.文件类型	创建文件
/pattern		从光标开始向文件尾搜索pattern
?pattern		从光标开始向文件首搜索pattern
n			在同一方向上重复上一次搜索命令
N			在反方向上重复上一次搜索命令

:s/p1/p2/g		将当前行中所有p1用p2代替
:n1,m2s/p1/p2/g		将n1到n2行所有的p1用p2代替
:g/p1/s//p2/g		将文件中所有的p1用p2代替

touch			修改档案时间


##进入插入模式的方法
```
i	//在光标的前边
I	//在光标所在行的行首

a	//在光标后面
A	//光标所在行的行尾

o	// 光标所在行的下方插入空格
O	// 光标说在行的上方插入空格

s	// 删除光标指定的字符
S	// 光标所在行清除并进入插入模式

```

##motion--表示操作范围的指令

```
0/^	// 将光标定位到行首
$	// 光标定位到行尾
b	// 将光标定位到光标所在单词的起始处
e	// 将光标定位到光标所在单词的结尾处
w	// 光标定位到下一个单词的起始处
gg	// 将光标定位到文件的开头
G	// 光标定位到文件的末尾

```

## 删除

> x	//删除单个字符
> 数字 + motion = 重复多个 motion	// 4+h == 向右移动四格 
> d + 数字 + motion = 删除多个motion范围


## 撤销

```
u	// 表示撤销最后次修改
U	// 表示撤销对整行的修改

Ctrl + r	// 恢复撤销的修改 
```

## 粘帖

```
p	// 将最后一次删除的内容粘帖到光标之后
P	// 粘帖到光标之前
```

## 拷贝

```
y [number] motion
```


## 替换

```
r + newkey
[number] + r + newkey	// 将光标前number个字符都替换成newkey

R	// 进入替换模式
```

## 修改模式

> 修改会进入插入模式， 替换不会进入插入模式

```
c [number] motion
```

## 打开多个文件

-o	//垂直打开
-O	//水平打开

Ctrl + w + w	将光标切换到下一个文件

Ctrl + w + 上/下/左/右	切换文件


